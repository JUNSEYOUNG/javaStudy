**제어문
프로그램 명령의 흐름을 제어하기 위한 문장

1.선택문
주어진 상황에 따라 실행시켜야 할 명령어를 선택하기 위한 문장
if문(if else),switch case문

2.반복문
주어진 조건을 만족할 동안에 어떠한 명령어(들)을 반복하기 위한 문장
for문,while문,do-while문

break문,continue문

--------------------------------------------------
반복문 중
[for문의 형식]

a;
b;
for(조건식){
     c;
     d;
}
e;
f;

**a,b를 수행한 다음 for문의 조건식을 만족할 동안에 c,d를 반복해 실행하고
조건식을 더이상 만족하지 않을 때 for문을 탈출해 e,f를 실행함

[for문의 조건식]
for(초기값; 조건식; 증감식){
	명령어(들)
}

**for()안에 반드시 세미콜론(;) 두개를 써야하고
세미콜론 왼쪽에는 반복할 조건식의 초기값을 정해주고
가운데에는 조건식을 써주고
맨 오른쪽에는 증감식을 씀
중괄호 안에 그 조건식을 만족할 동안에 반복실행할 명령어(들)을 작성함

     a;
     b; 
     for(int i=1; i<=3; i++){
	    c;
            d;
     }
            e;
            f;

위의 코드는 a,b를 실행한 다음 
i가 1부터 1씩 증가하여 i가 3보다 작거나 같을 동안에
c,d를 실행하고 조건식의 i<=3라는 조건식을 만족하지 않을 때
반복문을 탈출해서 e,f를 실행함
>즉 a,b를 실행하고 i가 1일 때 c,d를 실행하고
그다음 i가 1증가하여 2일 때 c,d를 실행하고
i가 1증가하여 3일 때 c,d를 실행하고
i가 1증가하여 조건식을 판별하니 만족하지 않아
for문을 빠져나오고 e,f를 실행함

>이 때 반복문 안에서 사용되는 변수 i는
반복문 안에서 바로 선언하여 사용할 수도 있고,
반복문 밖에서 미리 선언하여 사용할 수도 있음
ex) 
int i;
for(i=1; i<=3; i++){
}
이렇게 반복문 바깥에서 미리 변수 선언하고 반복문 속에서 사용할 수 있음

ex)
for(int i=1; i<=3; i++){
}
이렇게 반복문 속에서 바로 int i=1과 같이 변수를 선언해서 사용할 수 있음

**변수 i가 반복문 속에서만 필요하다면 반복문 속에서 바로 변수 선언하고,
만약 반복문 밖에서도 변수 i가 필요하다면 반복문이 오기 전에 먼저 변수를 선언해야 함

**그러나 다음과 같이 반복문이 오기 전에 선언한 변수이름과
반복문 속에서 선언한 변수명을 같게하면 오류가 발생함
반복문이 오기 전에 이미 i라는 변수가 있는데
또 반복문 안에서 변수 i를 만들게 되어 오류가 발생함
밖에서 만들거나 안에서 만들거나 하나만!
>반복문 안에서는 필요하다면 또 다른 반복문이 올 수도 있고
주어진 문제해결을 위해 선택문 if나 switch문을 표현할 수도 있음
int i;
for(int i=1; i<=3; i++){
}

**for문의 형식은 
for(초기값; 조건식; 증감식){
      명령어
}
와 같이 표현함
초기값이 조건식의 최종값보다 꼭 작을 필요는 없음!
큰값부터 반대로 감소하면서 반복문을 실행시킬 수도 있음!
----------------------------------------------------
**break문
breeak는 switch case문이나 반복문 for에서 사용되며
어떠한 상황이 되었을 때 
switch case문이나 반복문 for을 탈출하는 용도로 사용됨

-----------------------------------------------------
**배열과 반복문
[배열]
자료형이 같은 기억장소의 모임
만약에 자료형이 같은 기억장소가 한두개가 아니고 많이 필요하다면
예를 들어 어떤 학교의 전교생이 2000명인데
2000명에 대한 성적처리하는 프로그램을 작성하려고 함
2000명의 점수를 입력받기 위한 변수를 일일이 2000개를 
int student1, student2, student3, ... , student2000
이렇게 변수를 선언하는 것은 불가능한 것은 아니지만 매우 번거로움
변수이름 정해주다가 시간 다감. 이와 같이 자료형이 같은 기억장소(student1, student2...)가
많이 필요할 때 자료형과 변수를 대표하는 이름과 크기를 정해주어 배열을 사용할 수 있음
배열은 자료형이 같은 기억장소를 연속하여 확보해줌. 그렇기 때문에 차례대로
첫번째 기억장소부터 접근할 수 있는데 이것을 "인덱스" index라고 함
예를 들어 정수형 변수 5개가 필요하다면 다음과 같이 배열을 선언함
int []a = new int[5];
a는 배열이름이고 int[5]는 5개를 만들라는 뜻
이와 같이 배열을 선언하면 5개의 기억장소를 사용할 수 있음
접근하기 위해서는 배열이름과 인덱스로 접근함
예를 들어 맨첫번째 요소에 100을 저장하려면
a[0] = 100 라고 씀
//a[0]에서 0이 인덱스
인덱스는 0부터 사용함
만약 배열의 크기가 5면 사용할 수 있는 인덱스는 0,1,2,3,4까지 5개임
따라서 배열의 크기가 n이라면 사용하는 인덱스는 0~n-1까지임

이때 배열의 요소를 모두 출력한다던지 모두 더한다던지 일괄처리하기 위해 반복문을 사용함





[반복문]











